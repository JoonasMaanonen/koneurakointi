upstream backend {
    server flask_app:5000;
}

# Define the parameters for a specific virtual host/server
server {
   # Define the directory where the contents being requested are stored
   # root /usr/src/app/project/;

   # Define the default page that will be served If no page was requested
   # (ie. if www.kennedyfamilyrecipes.com is requested)
   # index index.html;

   # Define the server name, IP address, and/or port of the server
   listen 80;
   server_name koneurakointi-niittyla.fi;
   #server_name localhost;

   charset utf-8;

   location / {
       # Redirect all traffic to the https port
       return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Configure NGINX to deliver static content from the specified folder
    #location /static {
    #   alias /usr/src/koneurakointi/flask_app/static;
    #}
    
}

server{
    listen 443 ssl;
    server_name koneurakointi-niittyla.fi;
    #server_name localhost;
    charset utf-8;
    ssl_certificate /etc/letsencrypt/live/koneurakointi-niittyla.fi/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/koneurakointi-niittyla.fi/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    location / {
       # Define the location of the proxy server to send the request to
       proxy_pass http://backend;

       # Redefine the header fields that NGINX sends to the upstream server
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

       # Define the maximum file size on file uploads
       client_max_body_size 5M;


    }

}